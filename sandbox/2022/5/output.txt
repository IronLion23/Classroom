If one word could sum up the 2021 infosecurity year (well, actually three), it would be these: "supply chain attack". 
A software supply chain attack happens when hackers manipulate the code in third-party software components to compromise the 'downstream' applications that use them. In 2021, we have seen a dramatic rise in such attacks: high profile security incidents like the SolarWinds, Kaseya, and 
Codecov
What does this have to do with secrets, you might ask? In short, a lot. Take the Codecov case (we'll go back to it quickly): it is a textbook example to illustrate how hackers leverage hardcoded credentials to gain initial access into their victims' systems and harvest more secrets down the chain. 
Secrets-in-code remains one of the most overlooked vulnerabilities in the application security space, despite being a priority target in hackers' playbooks. In this article, we will talk about secrets and how keeping them out of source code is today's number one priority to secure the software development lifecycle.
What is a secret?
Secrets are digital authentication credentials (API keys, certificates, tokens, etc.) that are used in applications, services or infrastructures. Much like a password (plus a device in case of 2FA) is used to authenticate a person, a secret authenticates systems to enable interoperability. But there is a catch: unlike passwords, secrets are meant to be distributed. 
To continually deliver new features, software engineering teams need to interconnect more and more building blocks. Organizations are watching the number of credentials in use across multiple teams (development squad, SRE, DevOps, security etc.) explode. Sometimes developers will keep keys in an insecure location to make it easier to change the code, but doing so often results in the information mistakenly being forgotten and inadvertently published.
In the application security landscape, hardcoded secrets are really a different type of vulnerability. First, since source code is a very leaky asset, meant to be cloned, checked out, and forked on multiple machines very frequently, secrets are leaky too. But, more worryingly, let's not forget that code also has a memory. 
Any codebase is managed with some kind of version control system (VCS), keeping a historical timeline of all the modifications ever made to it, sometimes over decades. The problem is that still-valid secrets can be hiding anywhere on this timeline, opening a new dimension to the attack surface. Unfortunately, most security analyses are only done on the current, ready-to-be-deployed, state of a codebase. In other words, when it comes to credentials living in an old commit or even a never-deployed branch, these tools are totally blind.
Six million secrets pushed to GitHub
Last year, monitoring the commits pushed to GitHub in real-time, GitGuardian detected more than 6 million leaked secrets
A large share of those secrets was giving access to corporate resources. No wonder then that an attacker looking to gain a foothold into an enterprise system would first look at its public repositories on GitHub, and then at the ones owned by its employees. Many developers use GitHub for personal projects and can happen to leak by mistake corporate credentials (yes, it happens regularly!). 
With valid corporate credentials, attackers operate as authorized users, and detecting abuse becomes difficult. The time for a credential to be compromised after being pushed to GitHub is a mere 4 seconds, meaning it should be immediately revoked and rotated to neutralize the risk of being breached. Out of guilt, or lacking technical knowledge, we can see why people often take the wrong path
Another bad mistake for enterprises would be to tolerate the presence of secrets inside non-public repositories. GitGuardian's State of Secrets Sprawl report highlights the fact that private repositories hide much more secrets than their public equivalent. The hypothesis here is that private repositories give the owners a false sense of security, making them a bit less concerned about potential secrets lurking in the codebase.
That's ignoring the fact that these forgotten secrets could someday have a devastating impact if harvested by hackers. 
To be fair, application security teams are well aware of the problem. But the amount of work to be done to investigate, revoke and rotate the secrets committed every week, or dig through years of uncharted territory, is simply overwhelming.
Headline breaches... and the rest
However, there is an urgency. Hackers are actively looking for "dorks" on GitHub, which are easily recognized patterns to identify leaked secrets. And GitHub is not the only place where they can be active, any registry (like Docker Hub) or any source code leak can potentially become a goldmine to find exploitation vectors.
As evidence, you just have to look at recently disclosed breaches: a favorite of many open-source projects, Codecov is a code coverage tool. Last year, it was compromised by attackers who gained access by extracting a static cloud account credential from its official Docker image. After having successfully accessed the official source code repository, they were able to tamper with a CI script and harvest hundreds of secrets from Codecov's user base. 
More recently, Twitch's entire codebase was leaked, exposing more than 6,000 Git repositories and 3 million documents. Despite lots of evidence demonstrating a certain level of AppSec maturity, nearly 7,000 secrets could be surfaced
A few years ago, Uber was not so lucky. An employee accidentally published some corporate code on a public GitHub repository, that was his own. Hackers found out and detected a cloud service provider's keys granting access to Uber's infrastructure. A massive breach ensued. 
The bottom line is that you can't really be sure when a secret will be exploited, but what you must be aware of is that malicious actors are monitoring your developers, and they are looking for your code. Also keep in mind that these incidents are just the tip of the iceberg, and that probably many more breaches involving secrets are not publicly disclosed. 
Conclusion
Secrets are a core component of any software stack, and they are especially powerful, therefore they require very strong protection. Their distributed nature and the modern software development practices make it very hard to control where they end up, be it source code, production logs, Docker images, or instant messaging apps. Secrets detection and remediation capability is a must because even secrets can be exploited in an attack leading to a major breach. Such scenarios happen every week and as more and more services and infrastructure are used in the enterprise world, the number of leaks is growing at a very fast rate. The earlier action is taken, the easier it is to protect source code from future threats.
Note - 
Found this article interesting? Follow THN on 
Facebook
Twitter 
LinkedIn
SHARE
SHARE data breach hacking news software security source code supply chain attack
Popular This Week
New Unpatched Bug Could Let Attackers Steal Money from PayPal Users
Web Trackers Caught Intercepting Online Forms Even Before Users Hit Submit
Microsoft Warns Rise in XorDdos Malware Targeting Linux Devices
Cisco Issues Patch for New IOS XR Zero-Day Vulnerability Exploited in the Wild
Hackers Trick Users with Fake Windows 11 Downloads to Distribute Vidar Malware
New Bluetooth Hack Could Let Attackers Remotely Unlock Smart Locks and Cars
Comments
Latest Stories
Other Stories
Make software security a priority in 2022
Learn more about how security-aware developers represent a vast and largely untapped resource that can support cyber defenses.
Uncover the secure developer inside every coder
Empower developers to deliver secure coding that is intrinsic to their daily process.
Java Spring Framework 0-Day Bug Threatens Enterprise Security
Maintainers of Spring Framework have released an emergency patch to address RCE flaw.
Learn Hacking Skills with 9 Python Courses
Get this video training with lifetime access today for just $39!
Online Courses and Software
A to Z Cybersecurity Certification Training
Get Paid to Hack Computer Networks When You Become a Certified Ethical Hacker.
CompTIA Campus Premium
One-Stop-Shop for All CompTIA Certifications! Get 1-Yr Access to Courses, Live Hands-On Labs, Practice Exams and Updated Content
Network, Security and Ethical Hacking
Your 28-Hour Roadmap as an Ultimate Security Professional  Master Network Monitoring, PenTesting, and Routing Techniques and Vulnerabilities
Complete Linux Certification Training
Know Your Way Around Networks and Client-Server Linux Systems  Techniques, Command Line, Shell Scripting, and More
Cybersecurity Newsletter  Stay Informed
Sign up for cybersecurity newsletter and get latest news updates delivered straight to your inbox daily.

Malicious actors can gain unauthorized access to users' online accounts via a new technique called "account pre-hijacking," new research has found.
The attack takes aim at the account creation process that's ubiquitous in websites and other online platforms, enabling an adversary to perform a set of actions before an unsuspecting victim creates an account in a target service.
The study was led by independent security researcher Avinash Sudhodanan in collaboration with Andrew Paverd of the Microsoft Security Response Center (MSRC).
Pre-hijacking banks on the prerequisite that an attacker is already in possession of a unique identifier associated with a victim, such as an email address or phone number, which can be obtained either from the target's social media accounts or credential dumps circulating on the web.
The attacks can then play out in five different ways, including the use of the same email address during account creation by both the adversary and the victim, potentially granting the two parties concurrent access to the account. "If the attacker can create an account at a target service using the victim's email address before the victim creates an account, the attacker could then use various techniques to put the account into a pre-hijacked state," the researchers said "After the victim has recovered access and started using the account, the attacker could regain access and take over the account." The five types of pre-hijacking attacks are below -
Classic-Federated Merge Attack federated identity
Unexpired Session Identifier Attack
Trojan Identifier Attack
Unexpired Email Change Attack
Non-Verifying Identity Provider (IdP) Attack
In an empirical evaluation of 75 of the most popular websites from Alexa, 56 pre-hijacking vulnerabilities were identified on 35 services. This includes 13 Classic-Federated Merge, 19 Unexpired Session Identifier, 12 Trojan Identifier, 11 Unexpired Email Change, and one Non-Verifying IdP attacks -
Dropbox - Unexpired Email Change Attack
Instagram - Trojan Identifier Attack
LinkedIn - Unexpired Session and Trojan Identifier Attacks
Wordpress.com - Unexpired Session and Unexpired Email Change Attacks, and
Zoom - Classic-Federated Merge and Non-verifying IdP Attacks "The root cause of all of the attacks [...] is a failure to verify ownership of the claimed identifier," the researchers said. "Although many services do perform this type of verification, they often do so asynchronously, allowing the user to use certain features of the account before the identifier has been verified. Although this might improve usability (reduces user friction during sign up), it leaves the user vulnerable to pre-hijacking attacks."
While implementing strict identifier verification in services is crucial to mitigating pre-hijacking attacks, it's recommended that users secure their accounts with multi-factor authentication (MFA). "Correctly implemented MFA will prevent the attacker from authenticating to a pre-hijacked account after the victim starts using this account," the researchers noted. "The service must also invalidate any sessions created prior to the activation of MFA to prevent the Unexpired Session attack."
On top of that, online services are also advised to periodically delete unverified accounts, enforce a low window to confirm a change of email address, and invalidate sessions during password resets for a defense in-depth approach to account management. "When a service merges an account created via the classic route with one created via the federated route (or vice-versa), the service must ensure that the user currently controls both accounts," Sudhodanan and Paverd said.
Found this article interesting? Follow THN on 
Facebook
Twitter 
LinkedIn
SHARE
SHARE 
Account Hijacking
Authentication bypass
Microsoft password security
Popular This Week
New Unpatched Bug Could Let Attackers Steal Money from PayPal Users
Web Trackers Caught Intercepting Online Forms Even Before Users Hit Submit
Microsoft Warns Rise in XorDdos Malware Targeting Linux Devices
Cisco Issues Patch for New IOS XR Zero-Day Vulnerability Exploited in the Wild
Hackers Trick Users with Fake Windows 11 Downloads to Distribute Vidar Malware
New Bluetooth Hack Could Let Attackers Remotely Unlock Smart Locks and Cars
Comments
Latest Stories
Other Stories
Make software security a priority in 2022
Learn more about how security-aware developers represent a vast and largely untapped resource that can support cyber defenses.
Uncover the secure developer inside every coder
Empower developers to deliver secure coding that is intrinsic to their daily process.
Java Spring Framework 0-Day Bug Threatens Enterprise Security
Maintainers of Spring Framework have released an emergency patch to address RCE flaw.
Learn Hacking Skills with 9 Python Courses
Get this video training with lifetime access today for just $39!
Online Courses and Software
A to Z Cybersecurity Certification Training
Get Paid to Hack Computer Networks When You Become a Certified Ethical Hacker.
CompTIA Campus Premium
One-Stop-Shop for All CompTIA Certifications! Get 1-Yr Access to Courses, Live Hands-On Labs, Practice Exams and Updated Content
Network, Security and Ethical Hacking
Your 28-Hour Roadmap as an Ultimate Security Professional  Master Network Monitoring, PenTesting, and Routing Techniques and Vulnerabilities
Complete Linux Certification Training
Know Your Way Around Networks and Client-Server Linux Systems  Techniques, Command Line, Shell Scripting, and More
Cybersecurity Newsletter  Stay Informed
Sign up for cybersecurity newsletter and get latest news updates delivered straight to your inbox daily.

An unknown advanced persistent threat (APT) group has been linked to a series of spear-phishing attacks targeting Russian government entities since the onset of the Russo-Ukrainian war in late February 2022. "The campaigns [...] are designed to implant a Remote Access Trojan (RAT) that can be used to surveil the computers it infects, and run commands on them remotely," Malwarebytes said
The cybersecurity company attributed the attacks with low confidence to a Chinese hacking group, citing infrastructure overlaps between the RAT and Sakula Rat malware used by a threat actor known as 
Deep Panda
The attack chains, while leveraging different lures over the course of two months, all employed the same malware barring small differences in the source code.
The campaign is said to have commenced around February 26, days after Russia's military invasion of Ukraine, with the emails distributing the RAT under the guise of an interactive map of Ukraine ("interactive_map_UA.exe").
The development once again demonstrates threat actors' capabilities to adapt and adjust their attacks to world events, using the most relevant and up-to-date lures to maximize their chances of success.
A second early March attack wave primarily targeted the state-controlled RT TV and involved the use of a rogue software fix for the 
Log4Shell vulnerability
Besides including the patch in the form of a compressed TAR file, the email message also came with a PDF document with instructions to install the patch and listed the best security practices to follow, including enabling two-factor authentication, using Kaspersky antivirus, and refraining from opening or replying to suspicious emails.
In a further attempt to boost the authenticity of the email, the document also contained a 
VirusTotal URL
What's more, the email featured links to an attacker-controlled domain "rostec[.]digital" along with fraudulent profiles created on Facebook and Instagram alluding to the Russian defense conglomerate. "Interestingly, the threat actor created the Facebook page in June 2021, nine months before it was used in this campaign," the researchers said. "This was probably an attempt to attract followers, to make the page look more legitimate, and it suggests the APT group were planning this campaign long before the invasion of Ukraine."
The third iteration of the attack that followed made use of another malicious executable file  this time "build_rosteh4.exe"  in an attempt to pass off the malware as though it's from Rostec.
Lastly, in mid-April 2022, the attackers pivoted to a job-themed phishing bait for Saudi Aramco, a Saudi Arabian petroleum and natural gas company, the weaponized Microsoft Word document acting as a trigger for an infection sequence to deploy the RAT.
The DLL payload employs a variety of advanced tricks to thwart analysis, including control flow flattening and string obfuscation, while also incorporating features that allow it to arbitrary files sent from a remote server to the infected host and execute command-line instructions.
The findings closely follow findings from Check Point that a 
Chinese adversarial collective
Found this article interesting? Follow THN on 
Facebook
Twitter 
LinkedIn
SHARE
SHARE cybersecurity hacking news
Malware
Remote Access Trojan russian hacker 
Popular This Week
New Unpatched Bug Could Let Attackers Steal Money from PayPal Users
Web Trackers Caught Intercepting Online Forms Even Before Users Hit Submit
Microsoft Warns Rise in XorDdos Malware Targeting Linux Devices
Cisco Issues Patch for New IOS XR Zero-Day Vulnerability Exploited in the Wild
Hackers Trick Users with Fake Windows 11 Downloads to Distribute Vidar Malware
New Bluetooth Hack Could Let Attackers Remotely Unlock Smart Locks and Cars
Comments 
Latest Stories
Other Stories
Make software security a priority in 2022
Learn more about how security-aware developers represent a vast and largely untapped resource that can support cyber defenses.
Uncover the secure developer inside every coder
Empower developers to deliver secure coding that is intrinsic to their daily process.
Java Spring Framework 0-Day Bug Threatens Enterprise Security
Maintainers of Spring Framework have released an emergency patch to address RCE flaw.
Learn Hacking Skills with 9 Python Courses
Get this video training with lifetime access today for just $39!
Online Courses and Software
A to Z Cybersecurity Certification Training
Get Paid to Hack Computer Networks When You Become a Certified Ethical Hacker.
CompTIA Campus Premium
One-Stop-Shop for All CompTIA Certifications! Get 1-Yr Access to Courses, Live Hands-On Labs, Practice Exams and Updated Content
Network, Security and Ethical Hacking
Your 28-Hour Roadmap as an Ultimate Security Professional  Master Network Monitoring, PenTesting, and Routing Techniques and Vulnerabilities
Complete Linux Certification Training
Know Your Way Around Networks and Client-Server Linux Systems  Techniques, Command Line, Shell Scripting, and More
Cybersecurity Newsletter  Stay Informed
Sign up for cybersecurity newsletter and get latest news updates delivered straight to your inbox daily.

Security incidents occur. It's not a matter of "if," but of "when." That's why you implemented security products and procedures to optimize the incident response (IR) process.
However, many security pros who are doing an excellent job in handling incidents find effectively communicating the ongoing process with their management a much more challenging task.
Feels familiar?
In many organizations, leadership is not security savvy, and they aren't interested in the details regarding all the bits and bytes in which the security pro masters. 
Luckily, there is a template that security leads can use when presenting to management. It's called the 
IR Reporting for Management template
The IR Reporting for Management template enables CISOs and CIOs to communicate with the two key points that management cares aboutassurance that the incident is under control and a clear understanding of implications and root cause.
Control is a key aspect of IR processes, in the sense that at any given moment, there is full transparency of what is addressed, what is known and needs to be remediated, and what further investigation is needed to unveil parts of the attack that are yet unknown.
Management doesn't think in terms of trojans, exploits, and lateral movement, but rather they think in terms of business productivity  downtime, man-hours, loss of sensitive data.
Mapping a high-level description of the attack route to damage that is caused is paramount to get the management's understanding and involvement  especially if the IR process requires additional spending.
The IR Reporting for Management template follows the SANSNIST IR framework and will help you walk your management through the following stages:
Identification
Attacker presence is detected beyond doubt. Follow the template to answer key questions: 
Was the detection made in-house or by a third-party? 
How mature is the attack (in terms of its progress along the kill chain)? 
What is the estimated risk? 
Will the following steps be taken with internal resources or is there a need to engage a service provider?
Containment
First aid to stop the immediate bleeding before any further investigation, the attack root cause, the number of entities taken offline (endpoints, servers, user accounts), current status, and onward steps.
Eradication
Full cleanup of all malicious infrastructure and activities, a complete report on the attack's route and assumed objectives, overall business impact (man-hours, lost data, regulatory implications, and others per the varying context).
Recovery
Recovery rate in terms of endpoints, servers, applications, cloud workloads, and data.
Lessons Learned
How did that attack happen? Was it a lack of adequate security technology in place, insecure workforce practices, or something else? And how can we mend these issues? Provide a reflection on the previous stages across the IR process timeline, searching for what to preserve and what to improve.
Naturally, there is no one-size-fits-all in a security incident. For example, there might be cases in which the identification and containment will take place almost instantly together, while in other events, the containment might take longer, requiring several presentations on its interim status. That's why this template is modular and can be easily adjustable to any variant.
Communication with management is not a nice-to-have but a critical part of the IR process itself. The definitive IR Reporting to Management template helps security team leads make their efforts and results crystal clear to their management.
Download the Definitive IR Reporting to Management template here.
Found this article interesting? Follow THN on 
Facebook
Twitter 
LinkedIn
SHARE
SHARE 
Cynet
Incident response
Popular This Week
New Unpatched Bug Could Let Attackers Steal Money from PayPal Users
Web Trackers Caught Intercepting Online Forms Even Before Users Hit Submit
Microsoft Warns Rise in XorDdos Malware Targeting Linux Devices
Cisco Issues Patch for New IOS XR Zero-Day Vulnerability Exploited in the Wild
Hackers Trick Users with Fake Windows 11 Downloads to Distribute Vidar Malware
New Bluetooth Hack Could Let Attackers Remotely Unlock Smart Locks and Cars
Comments
Latest Stories
Other Stories
Make software security a priority in 2022
Learn more about how security-aware developers represent a vast and largely untapped resource that can support cyber defenses.
Uncover the secure developer inside every coder
Empower developers to deliver secure coding that is intrinsic to their daily process.
Java Spring Framework 0-Day Bug Threatens Enterprise Security
Maintainers of Spring Framework have released an emergency patch to address RCE flaw.
Learn Hacking Skills with 9 Python Courses
Get this video training with lifetime access today for just $39!
Online Courses and Software
A to Z Cybersecurity Certification Training
Get Paid to Hack Computer Networks When You Become a Certified Ethical Hacker.
CompTIA Campus Premium
One-Stop-Shop for All CompTIA Certifications! Get 1-Yr Access to Courses, Live Hands-On Labs, Practice Exams and Updated Content
Network, Security and Ethical Hacking
Your 28-Hour Roadmap as an Ultimate Security Professional  Master Network Monitoring, PenTesting, and Routing Techniques and Vulnerabilities
Complete Linux Certification Training
Know Your Way Around Networks and Client-Server Linux Systems  Techniques, Command Line, Shell Scripting, and More
Cybersecurity Newsletter  Stay Informed
Sign up for cybersecurity newsletter and get latest news updates delivered straight to your inbox daily.

Popular video conferencing service Zoom has resolved
XMPP
Tracked from CVE-2022-22784 through CVE-2022-22787, the issues range between 5.9 and 8.1 in severity. Ivan Fratric of Google Project Zero has been credited with discovering and reporting all the four flaws in February 2022.
The list of bugs is as follows -
CVE-2022-22784
CVE-2022-22785
CVE-2022-22786
CVE-2022-22787
With Zoom's chat functionality built on top of the XMPP standard, successful exploitation of the issues could enable an attacker to force a vulnerable client to masquerade a Zoom user, connect to a malicious server, and even download a rogue update, resulting in arbitrary code execution stemming from a downgrade attack
Fratric dubbed the zero-click attack sequence as a case of "
XMPP Stanza Smuggling
At its core, the issues take advantage of parsing inconsistencies between XML parsers in Zoom's client and server to "smuggle" arbitrary 
XMPP stanzas
Specifically, the exploit chain can be weaponized to hijack the software update mechanism and make the client connect to a man-in-the-middle server that serves up an old, less secure version of the Zoom client.
While the downgrade attack singles out the Windows version of the app, CVE-2022-22784, CVE-2022-22785, and CVE-2022-22787 impact Android, iOS, Linux, macOS, and Windows.
The patches arrive less than a month after Zoom addressed two high-severity flaws (CVE-2022-22782 and CVE-2022-22783) that could lead to local privilege escalation and exposure of memory contents in its on-premise Meeting services. Also fixed was another instance of a downgrade attack (CVE-2022-22781) in Zoom's macOS app.
Users of the application are recommended to update to the latest version (5.10.0) to mitigate any potential threats arising out of active exploitation of the flaws.
Found this article interesting? Follow THN on 
Facebook
Twitter 
LinkedIn
SHARE
SHARE cybersecurity
Google hacking news
Video Conference Software
Zoom
Popular This Week
New Unpatched Bug Could Let Attackers Steal Money from PayPal Users
Web Trackers Caught Intercepting Online Forms Even Before Users Hit Submit
Microsoft Warns Rise in XorDdos Malware Targeting Linux Devices
Cisco Issues Patch for New IOS XR Zero-Day Vulnerability Exploited in the Wild
Hackers Trick Users with Fake Windows 11 Downloads to Distribute Vidar Malware
New Bluetooth Hack Could Let Attackers Remotely Unlock Smart Locks and Cars
Comments
Latest Stories
Other Stories
Make software security a priority in 2022
Learn more about how security-aware developers represent a vast and largely untapped resource that can support cyber defenses.
Uncover the secure developer inside every coder
Empower developers to deliver secure coding that is intrinsic to their daily process.
Java Spring Framework 0-Day Bug Threatens Enterprise Security
Maintainers of Spring Framework have released an emergency patch to address RCE flaw.
Learn Hacking Skills with 9 Python Courses
Get this video training with lifetime access today for just $39!
Online Courses and Software
A to Z Cybersecurity Certification Training
Get Paid to Hack Computer Networks When You Become a Certified Ethical Hacker.
CompTIA Campus Premium
One-Stop-Shop for All CompTIA Certifications! Get 1-Yr Access to Courses, Live Hands-On Labs, Practice Exams and Updated Content
Network, Security and Ethical Hacking
Your 28-Hour Roadmap as an Ultimate Security Professional  Master Network Monitoring, PenTesting, and Routing Techniques and Vulnerabilities
Complete Linux Certification Training
Know Your Way Around Networks and Client-Server Linux Systems  Techniques, Command Line, Shell Scripting, and More
Cybersecurity Newsletter  Stay Informed
Sign up for cybersecurity newsletter and get latest news updates delivered straight to your inbox daily.

